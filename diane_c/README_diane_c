**********************************************************************
* Set of DIANE programs 
*
* JLP
* Version 01/04/2008
**********************************************************************

dc_cgradient.c
dc_cgradient_mallat.c
dc_erreur.c
dc_gaussian_noise.c
dc_lissage_1D.c
dc_lissage.c
dc_regul.c
dc_sigmai.c

------------------------------------------------------------------------
dc_direct_snr.c
* PURPOSE: Computes the signal to noise ratio value in direct space
*          assuming that noise is of additive nature  
*          and taking into account a support constraint.
*                             
* INPUT:  argv[1] = input_image
*         argv[2] = support_constraint 
*
* IN: input image
*     mask image (support)
* OUT: value of the SNR in direct space 
------------------------------------------------------------------------

------------------------------------------------------------------------
dc_snr.c
* PURPOSE: Estimates the signal to noise ratio of an image in Fourier domain 
*          assuming additive gaussian noise.
* 
* INPUT:  argv[1] = input image 
*         argv[2] = value of the signal to noise ratio in direct space
*         argv[3] = reliability of this value (1 good, 2 medium, 3 bad)
*         argv[4] = generic name for output 
*
* IN: input image
* OUT: *.SNR (SNR of the input image, Fourier domain) 
*      *.SIG (noise of FT), *.RFT (real part of the FT of the input)
*      *.IFT (imagin. part of the FT of the input)
------------------------------------------------------------------------

------------------------------------------------------------------------
dc_ftm.c 
* PURPOSE: Normalize PSF respecting L1 normalization.
*          Performs fourier transform of PSF and bounds it.
* IN: *.PSF
* OUT: *.FTB (modulus of the bounded transfer function)
------------------------------------------------------------------------

------------------------------------------------------------------------
dc_ftmm.c
* PURPOSE: Normalizes PSF respecting L1 normalization.
*          Performs fourier transform of PSF and bounds it.
*          Same as ftm but for square modulus of the transfer function 
*          instead of PSF. 
* IN: square modulus of transfer function (with zero freq. in the center) 
* OUT: *.FTB (modulus of the bounded transfer function)
------------------------------------------------------------------------

------------------------------------------------------------------------
dc_ftmm_1D.c
* PURPOSE: Same as ftmm but for 1D data 
------------------------------------------------------------------------

**********************************************************************
* Parameters used for datatest.bdf
**********************************************************************

 D_SNR:  snr=10. reliability=2
 [[ D_REPONS:   psf : sigma=3  ---> rayon=12. ]]
 D_FTM: lim = lower threshold of the PSF in Fourier domain 
 D_LISSAGE: gain=2, alphaT=1.5 angle=180, psf radius (in direct space)=35.
	    ---> eta0 (=1.76)
 D_REGUL: isophote threshold=112., alphaprime=4.
 D_ERREUR: ---> epsilon (=586.,586.,0.)
 D_CGRADIENT: epsilon ---> *.PHIN (final image)

**********************************************************************
* Input/Output
**********************************************************************

D_SNR : 
	IN: input image
	OUT: *.SNR (SNR of the input image, Fourier domain) 
	     *.SIG (noise of FT), *.RFT (real part of the FT of the input)
	     *.IFT (imagin. part of the FT of the input)

D_REPONS : 
	OUT: *.PSF (Point spread function, direct space)

D_FTM : 
	IN: *.PSF
	OUT: *.FTB (modulus of the limited transfer function)

D_LISSAGE: 
* runs w_lissage Alpha_T generic_name Radius_HR Tranfer_Function
*
	IN: *.FTB, *.SNR, *.RFT, *.IFT
	OUT: *.HR (synthetic aperture), *.FLI (smoothing filter)
	     *.PHIT  (first approx. of the object),
	     *.PCR and *.PCI (real and imag. parts of the FT of *.PHIT)

D_REGUL:
* With an isophote level for defining the support:
* runs w_regul alpha_prime_T generic_name isophote_value alpha_T
*
* With a mask contained in a file:
* runs w_regul alpha_prime_T mask.fits value alpha_T   
*
	IN: *.PHIT, *.SNR, *.HR
	OUT: *.V (Domaine of the object, direct space), *.G (regularizing
	     function), *.KR (stabilizing function)
D_ERREUR:
	IN: *.G, *.FLI, *.FTB, *.SNR, *.SIG, *.KR

D_CGRADIENT:
	IN: *.PHIT, *.PCR, *.PCI, *.V, *.G
	OUT: *.PHIN (final estimation of the object)

