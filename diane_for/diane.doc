#!/bin/csh
goto begin

$!********************************************************************
$! How to use DIANE (example)
$!JLP
$!Version 12-05-92
$!
$!********************************************************************

Sequence:

begin:
runs d_snr 10. 2. test.bdf test.
#[[ runs d_repons ]] 
runs d_ftm test. 25.
runs d_lissage 2. 180. 1.5 test. 35. 
#
# Plot first approximation of the solution
runs pstcopy0 test.phit
#       isophote or mask_file, alphat
#
# Add support constraint:
runs d_regul 4. test. 112. 1.5  [[or runs d_regul 4. test. mask.bdf 1.5]] 
#      generic name, alphat
runs d_erreur test. 1.5
runs d_cgradient test. 586.,586.,0.
runs pstcopy0 test.phin
goto end

**********************************************************************
* Parameters used for datatest.bdf
**********************************************************************

 D_SNR:  snr=10. reliability=2
 [[ D_REPONS:   psf : sigma=3  ---> rayon=12. ]]
 D_FTM: lim = lower threshold of the PSF in Fourier domain 
 D_LISSAGE: gain=2, alphaT=1.5 angle=180, psf radius (in direct space)=35.
	    ---> eta0 (=1.76)
 D_REGUL: isophote threshold=112., alphaprime=4.
 D_ERREUR: ---> epsilon (=586.,586.,0.)
 D_CGRADIENT: epsilon ---> *.PHIN (final image)

**********************************************************************
* Input/Output
**********************************************************************

D_SNR : 
	IN: input image
	OUT: *.SNR (SNR of the input image, Fourier domain) 
	     *.SIG (noise of FT), *.RFT (real part of the FT of the input)
	     *.IFT (imagin. part of the FT of the input)

D_REPONS : 
	OUT: *.PSF (Point spread function, direct space)

D_FTM : 
	IN: *.PSF
	OUT: *.FTB (modulus of the limited transfer function)

D_LISSAGE: 
* runs w_lissage Alpha_T generic_name Radius_HR Tranfer_Function
*
	IN: *.FTB, *.SNR, *.RFT, *.IFT
	OUT: *.HR (synthetic aperture), *.FLI (smoothing filter)
	     *.PHIT  (first approx. of the object),
	     *.PCR and *.PCI (real and imag. parts of the FT of *.PHIT)

D_REGUL:
* With an isophote level for defining the support:
* runs w_regul alpha_prime_T generic_name isophote_value alpha_T
*
* With a mask contained in a file:
* runs w_regul alpha_prime_T mask.fits value alpha_T   
*
	IN: *.PHIT, *.SNR, *.HR
	OUT: *.V (Domaine of the object, direct space), *.G (regularizing
	     function), *.KR (stabilizing function)
D_ERREUR:
	IN: *.G, *.FLI, *.FTB, *.SNR, *.SIG, *.KR

D_CGRADIENT:
	IN: *.PHIT, *.PCR, *.PCI, *.V, *.G
	OUT: *.PHIN (final estimation of the object)

end:
